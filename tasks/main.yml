---

- name: update package sources and upgrade system
  apt:
      update_cache: yes
      upgrade: yes

- name: Install required packages
  package:
      name: "{{ item }}"
      state: latest
  with_items: "{{ packages }}"

- name: Install not horribly out-of-date pip
  easy_install: 
      name: pip
      state: latest

- name: Install docker-py from pip
  pip:
      name: docker-py

- name: Partition 2nd drive
  filesystem:
      fstype: ext2
      dev: '{{ dockerdisk }}'
      opts: -L DOCKERDRV

- name: Use 2nd drive as docker storageprovider
  mount:
      src: LABEL=DOCKERDRV
      name: /var/lib/docker
      fstype: ext2
      state: mounted

- name: add docker repokey
  apt_key:
        url: "{{ docker_repo_key_src }}"
        state: present

- name: add docker repo to packages sources
  apt_repository:
        repo: "{{ docker_repo_uri }}"
        state: present

- name: install docker
  apt:
      update_cache: yes
      name: docker-ce
      state: latest

- name: Create docker group
  group:
      name: docker
      state: present

- name: Create user for docker
  user:
      name: runner
      group: docker
      state: present

- name: Start dockerd
  service:
      name: docker
      enabled: yes
      state: restarted

- name: Fetch Container Sources
  git:
      repo: "{{ item.uri }}"
      dest: "{{ item.dest }}"
  with_items: "{{ containers }}"

- name: generate buildscripts
  template:
      src: buildscript.sh.jinja2
      dest: /root/buildscript.sh
      mode: 0600

- name: build containers
  command: sh /root/buildscript.sh

- name: run database container
  docker_container:
      name: postgres_94
      image: postgres_94
      state: started
      restart: yes
  become: yes
  become_user: runner

- name: run application container
  #  command: docker run --rm -i -t -p 8080:5000 --name flask_jsonstore --link postgres_94:pg jsonapi_prod
  docker_container:
      name: flask_jsonstore
      image: jsonapi_prod
      state: started
      restart: yes
      links: "postgres_94:pg"
      ports: 8080:5000
  become: yes
  become_user: runner

- debug: msg="Your application should be available at localhost:8080"
